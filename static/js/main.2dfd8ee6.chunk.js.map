{"version":3,"sources":["images/paulocean.jpg","images/aboutImg.png","components/Home/HomeProject.js","Selectors/selectSortDate.js","components/Home/Home.js","Firebase/firebase.js","Actions/Index.js","Actions/Types.js","components/NavBar.js","components/ScrollToTop.js","components/About.js","components/Login/Login.js","components/Admin/AdminModalAddProject.js","components/Admin/AdminModalEditProject.js","components/Admin/Admin.js","App.js","serviceWorker.js","Reducers/homeReducer.js","Reducers/authReducer.js","Reducers/index.js","index.js"],"names":["module","exports","styleProject","title","textAlign","padding","column","marginTop","marginBottom","description","columnBox","HomeProject","props","dateData","data","name","link","github","date","stack","info","color","Grid","Column","style","mobile","tablet","computer","href","background","height","width","marginLeft","marginRight","border","verticalAlign","Item","Content","Header","as","target","rel","Meta","DateTime","fromISO","toLocaleString","month","year","Description","Array","isArray","join","createSelector","state","home","console","log","sort","b","a","Date","styleHome","spacer","placeholder","borderRadius","connect","sortedProjectByDate","selectSortDate","Placeholder","Image","src","PaulOcean","size","circular","centered","container","columns","doubling","Row","map","item","index","key","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","getProjects","dispatch","getState","async","collection","get","then","snapshot","docs","forEach","doc","push","id","type","payload","styleNav","menu","paddingLeft","paddingRight","fontSize","margin","mapDispatchToProps","userLogoutRx","auth","signOut","catch","error","userEmail","user","email","Menu","secondary","stackable","Link","to","position","content","onClick","ScrollToTop","prevProps","this","location","pathname","window","scrollTo","children","Component","withRouter","styleAbout","About","Sphere","className","Icon","Card","List","styleAuth","form","maxWidth","fontsize","userLoginRx","userCredentials","signInWithEmailAndPassword","password","message","errorMsg","useState","loginData","setLoginData","handleFormInputData","e","d","value","history","Form","onSubmit","preventDefault","loginName","submitLogin","Field","Input","onChange","Button","floated","styleAdminModalAddProject","button","addProjectRx","projectFormValue","add","open","setOpen","uid","formData","setFormData","closeButton","stackString","setStackString","useEffect","f","split","colorString","setColorString","AddProject","required","handleColor","handleStack","positive","icon","Confirm","onCancel","onConfirm","confirmButton","styleAdminModalEditProject","editProjectRx","update","ownProps","projectItem","basic","compact","deleteProjectRx","delete","SortedDate","authLoadingCompleted","project","deleteId","setDeleteId","deleteName","setDeleteName","authLoadingLogic","projectMap","Table","celled","HeaderCell","colSpan","itemId","itemName","Body","Cell","day","loaderComp","Segment","Dimmer","active","inverted","Loader","image","Line","length","Paragraph","header","checkAuthStateRx","onAuthStateChanged","getProjectsRx","Container","exact","path","render","Login","Boolean","hostname","match","initialState","combineReducers","ReactDOM","store","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dfd8ee6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paulocean.b4744572.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aboutImg.59983e64.png\";","import React from \"react\";\r\nimport { Grid, Item } from \"semantic-ui-react\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst styleProject = {\r\n  title: {\r\n    textAlign: \"left\",\r\n    padding: 5\r\n  },\r\n  column: {\r\n    marginTop: 30,\r\n    marginBottom: 30\r\n  },\r\n  description: {\r\n    padding: 5\r\n  },\r\n  columnBox: {\r\n    padding: 5\r\n  }\r\n};\r\n\r\nconst StringDateFormat = dateData => {\r\n  return DateTime.fromISO(dateData).toLocaleString({\r\n    month: \"short\",\r\n    year: \"numeric\"\r\n  });\r\n};\r\n\r\nconst HomeProject = props => {\r\n  const { name, link, github, date, stack, info, color } = props.data;\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column style={styleProject.column}>\r\n        <Grid>\r\n          <Grid.Column\r\n            mobile={12}\r\n            tablet={5}\r\n            computer={6}\r\n            style={styleProject.columnBox}\r\n          >\r\n            <a href={link}>\r\n              <div\r\n                style={\r\n                  color && {\r\n                    background: `linear-gradient(45deg, ${color[0]}, ${color[0]} 40%, ${color[1]} 40%, ${color[1]} 60%, ${color[2]} 60%, ${color[2]})`,\r\n                    height: 70,\r\n                    width: 70,\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    border: \"1px solid whitesmoke\"\r\n                  }\r\n                }\r\n              ></div>\r\n            </a>\r\n          </Grid.Column>\r\n          <Grid.Column\r\n            style={styleProject.title}\r\n            verticalAlign=\"middle\"\r\n            mobile={12}\r\n            tablet={11}\r\n            computer={10}\r\n          >\r\n            <Item>\r\n              <Item.Content>\r\n                <Item.Header\r\n                  as=\"a\"\r\n                  href={link}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {name}\r\n                </Item.Header>\r\n                <Item.Meta>{StringDateFormat(date)}</Item.Meta>\r\n                <Item.Description\r\n                  as=\"a\"\r\n                  href={github}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Github\r\n                </Item.Description>\r\n              </Item.Content>\r\n            </Item>\r\n          </Grid.Column>\r\n          <Grid.Column width={16} style={styleProject.description}>\r\n            <Item>\r\n              <Item.Content>\r\n                <Item.Description>{info}</Item.Description>\r\n                <Item.Description>\r\n                  {Array.isArray(stack) ? stack.join(\", \") : stack}\r\n                </Item.Description>\r\n              </Item.Content>\r\n            </Item>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeProject;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst sortDate = state => state.home;\r\n\r\nconst getSortedByDate = state => {\r\n  console.log(\"getSortedByDate Call\");\r\n  return [...state].sort((b, a) => {\r\n    let aDate = new Date(a.date);\r\n    let bDate = new Date(b.date);\r\n    return aDate - bDate;\r\n  });\r\n};\r\nexport default createSelector(sortDate, getSortedByDate);\r\n","import React from \"react\";\r\nimport { Image, Grid, Placeholder } from \"semantic-ui-react\";\r\nimport PaulOcean from \"../../images/paulocean.jpg\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeProject from \"./HomeProject\";\r\nimport selectSortDate from \"../../Selectors/selectSortDate\";\r\n\r\nconst styleHome = {\r\n  spacer: {\r\n    height: 60\r\n  },\r\n  placeholder: {\r\n    height: 300,\r\n    width: 300,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    borderRadius: \"500rem\"\r\n  }\r\n};\r\n\r\nconst Home = props => {\r\n  const { sortedProjectByDate } = props;\r\n\r\n  //****testing\r\n  console.log(\"sortedProjectByDate\", sortedProjectByDate);\r\n  console.log(\"home call\");\r\n\r\n  return (\r\n    <>\r\n      <Placeholder style={styleHome.placeholder}>\r\n        <Image src={PaulOcean} size=\"medium\" circular centered />\r\n      </Placeholder>\r\n\r\n      <div style={styleHome.spacer} />\r\n      <Grid container columns={4} doubling>\r\n        <Grid.Row>\r\n          {sortedProjectByDate.map((item, index) => {\r\n            return <HomeProject data={item} key={index} />;\r\n          })}\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  sortedProjectByDate: selectSortDate(state)\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import {\r\n  ADD_PROJECT,\r\n  AUTH_LOGIN,\r\n  AUTH_LOGOUT,\r\n  DELETE_PROJECT,\r\n  AUTH_ERROR_MSG,\r\n  GET_PROJECTS,\r\n  EDIT_PROJECT\r\n} from \"./Types\";\r\nimport firebase from \"./../Firebase/firebase\";\r\n\r\nexport const getProjects = () => async (dispatch, getState) => {\r\n  let data = [];\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"projects\")\r\n    .get()\r\n    .then(snapshot => {\r\n      snapshot.docs.forEach(doc => data.push({ ...doc.data(), id: doc.id }));\r\n    });\r\n\r\n  console.log(\"getProjects Called\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const deleteProject = projectId => async (dispatch, getState) => {\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"projects\")\r\n    .doc(projectId)\r\n    .delete()\r\n    .then(() => {\r\n      console.log(\"Deleted project from database\");\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error deleting project document: \", error);\r\n    });\r\n\r\n  await dispatch(getProjects());\r\n  // call getProject to update redux store state with the deleted document removed\r\n\r\n  dispatch({\r\n    type: DELETE_PROJECT\r\n    // payload: projectId\r\n  });\r\n};\r\n\r\n// this will get a snapshot of the firestore whole project document\r\n// dispatch  GET_PROJECTS will update the data into the redux store state\r\n// call this function whenever you want an update redux store with latest firestore documents\r\n\r\nexport const addProject = projectFormValue => async (dispatch, getState) => {\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"projects\")\r\n    .add(projectFormValue)\r\n    .then(() => console.log(\"project added\"))\r\n    .catch(error => console.log(\"error.message\", error.message));\r\n  await dispatch(getProjects());\r\n  dispatch({\r\n    type: ADD_PROJECT\r\n  });\r\n};\r\n\r\nexport const editProject = projectFormValue => async (dispatch, getState) => {\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"projects\")\r\n    .doc(projectFormValue.id)\r\n    .update({\r\n      name: projectFormValue.name,\r\n      link: projectFormValue.link,\r\n      github: projectFormValue.github,\r\n      date: projectFormValue.date,\r\n      stack: projectFormValue.stack,\r\n      color: projectFormValue.color,\r\n      info: projectFormValue.info\r\n    })\r\n    .then(() => console.log(\"update successful\"))\r\n    .catch(error => console.log(\"error.message\", error.message));\r\n  await dispatch(getProjects());\r\n\r\n  dispatch({\r\n    type: EDIT_PROJECT\r\n  });\r\n};\r\n\r\n// this listener will be called automatically when a user is login or logout\r\n// store this listener into main app.js so it will be called whenever website\r\n// is loaded\r\nexport const checkAuthState = () => (dispatch, getState) => {\r\n  firebase.auth().onAuthStateChanged(function(user) {\r\n    if (user) {\r\n      console.log(\"onauthstatechanged user logged in\");\r\n      dispatch({\r\n        type: AUTH_LOGIN,\r\n        payload: { user: user, authLoadingCompleted: true }\r\n      });\r\n      dispatch({ type: AUTH_ERROR_MSG, payload: null });\r\n    } else {\r\n      console.log(\"no user found\");\r\n      dispatch({\r\n        type: AUTH_LOGIN,\r\n        payload: { user: null, authLoadingCompleted: true }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n// firebase userlogin located in login.js\r\n// onced logged in the checkAuthState should already be called\r\n// and will be listening if user is logged in\r\nexport const userLogin = userCredentials => async (dispatch, getState) => {\r\n  await firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(userCredentials.email, userCredentials.password)\r\n    .then(console.log(\"user logged in successful\"))\r\n    .catch(error => {\r\n      console.log(\"errorMsg\", error.message);\r\n      dispatch({ type: AUTH_ERROR_MSG, payload: error.message });\r\n    });\r\n};\r\n\r\n// logged out will clear out state.auth.user while checkAuthState listener will CL \"no user found\"\r\nexport const userLogout = () => async (dispatch, getState) => {\r\n  await firebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => console.log(\"Signed Out Successful\"))\r\n    .catch(error => console.log(error));\r\n\r\n  dispatch({\r\n    type: AUTH_LOGOUT\r\n  });\r\n};\r\n","// Home\r\nexport const ADD_PROJECT = \"ADD_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const EDIT_PROJECT = \"EDIT_PROJECT\";\r\n// Auth\r\nexport const AUTH_LOGIN = \"AUTH_LOGIN\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\nexport const AUTH_ERROR_MSG = \"AUTH_ERROR_MSG\";\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { userLogout } from \"./../Actions/Index\";\r\n\r\nconst styleNav = {\r\n  menu: {\r\n    padding: 3,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    fontSize: \"1.2rem\",\r\n    margin: 0\r\n  },\r\n  log: {\r\n    paddingRight: 40\r\n  }\r\n};\r\n\r\nconst NavBar = props => {\r\n  const handleLogout = () => {\r\n    props.userLogoutRx();\r\n  };\r\n\r\n  return (\r\n    <Menu secondary style={styleNav.menu} stackable>\r\n      <Menu.Item as=\"h2\">Dat</Menu.Item>\r\n      <Menu.Item name=\"Home\" as={Link} to=\"/\" />\r\n      <Menu.Item name=\"About\" as={Link} to=\"/about\" />\r\n\r\n      {props.user && <Menu.Item name=\"Admin\" as={Link} to=\"/admin\" />}\r\n\r\n      <Menu.Menu position=\"right\" style={styleNav.log}>\r\n        {props.user ? (\r\n          <>\r\n            <Menu.Item content={`${props.user}`} />\r\n            <Menu.Item name=\"Logout\" as=\"a\" onClick={handleLogout} />\r\n          </>\r\n        ) : (\r\n          <Menu.Item name=\"Login\" as={Link} to=\"/login\" />\r\n        )}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  let userEmail = null;\r\n  if (state.auth.user != null) {\r\n    userEmail = state.auth.user.email;\r\n  }\r\n\r\n  return {\r\n    user: userEmail\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  userLogoutRx: userLogout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport Sphere from \"../images/aboutImg.png\";\r\nimport { Image, Card, List, Grid, Icon, Placeholder } from \"semantic-ui-react\";\r\n\r\nconst styleAbout = {\r\n  link: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    width: 200,\r\n    textAlign: \"center\"\r\n  },\r\n  placeholder: {\r\n    height: 300,\r\n    width: 300,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    borderRadius: \"500rem\"\r\n  }\r\n};\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <Placeholder style={styleAbout.placeholder}>\r\n        <Image\r\n          src={Sphere}\r\n          size=\"medium\"\r\n          circular\r\n          centered\r\n          className=\"imageRotate\"\r\n        />\r\n      </Placeholder>\r\n\r\n      <div style={styleAbout.link}>\r\n        <a\r\n          href=\"https://github.com/Zevez7\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon name=\"github\" size=\"huge\" link />\r\n        </a>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/dat7/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon name=\"linkedin\" size=\"huge\" link />\r\n        </a>\r\n      </div>\r\n      <Grid columns={3} doubling centered>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Card centered>\r\n              <Card.Content>\r\n                <Card.Header>Tech Stack</Card.Header>\r\n\r\n                <Card.Description>\r\n                  <List.Item>React (1 year)</List.Item>\r\n                  <List.Item>Redux (6 month)</List.Item>\r\n                  <List.Item>Javascript ES6 (2 years)</List.Item>\r\n                  <List.Item>Material UI (1 year)</List.Item>\r\n                  <List.Item>Bootstrap 4 (2 year)</List.Item>\r\n                  <List.Item>Firebase Firestore (1 year)</List.Item>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Card centered>\r\n              <Card.Content>\r\n                <Card.Header>Experience</Card.Header>\r\n\r\n                <Card.Description>\r\n                  <List.Item>3 year web development</List.Item>\r\n                  <List.Item>Project Management</List.Item>\r\n                  <List.Item>Software development</List.Item>\r\n                  <List.Item>Outsource Manager</List.Item>\r\n                  <List.Item>Startup Founder</List.Item>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Card centered>\r\n              <Card.Content>\r\n                <Card.Header>Interest</Card.Header>\r\n                <Card.Description>\r\n                  <List.Item>Healthcare</List.Item>\r\n                  <List.Item>Front End Development</List.Item>\r\n                  <List.Item>Public Health</List.Item>\r\n                  <List.Item>Health IT</List.Item>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Input } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userLogin } from \"./../../Actions/Index\";\r\n\r\nconst styleAuth = {\r\n  form: {\r\n    maxWidth: 500,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: 100,\r\n    padding: 30\r\n  },\r\n  fontsize: {\r\n    fontSize: \"1.1rem\"\r\n  }\r\n};\r\n\r\nconst Auth = props => {\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleFormInputData = (e, d) => {\r\n    setLoginData({\r\n      ...loginData,\r\n      [d.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  if (props.user) {\r\n    props.history.push(\"/\");\r\n  } else {\r\n    console.log(\"no login push\");\r\n  }\r\n\r\n  const submitLogin = e => {\r\n    e.preventDefault();\r\n    props.userLoginRx(loginData);\r\n    setLoginData({\r\n      ...loginData,\r\n      loginName: \"\",\r\n      password: \"\"\r\n    });\r\n  };\r\n\r\n  console.log(\"Login Render\");\r\n\r\n  return (\r\n    <>\r\n      <div style={styleAuth.form}>\r\n        <Form onSubmit={e => submitLogin(e)}>\r\n          <Form.Field>\r\n            <label style={styleAuth.fontsize}>Email</label>\r\n            <Input\r\n              style={styleAuth.fontsize}\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              value={loginData.email}\r\n              onChange={(e, d) => handleFormInputData(e, d)}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label style={styleAuth.fontsize}>Enter Password</label>\r\n            <Input\r\n              style={styleAuth.fontsize}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={loginData.password}\r\n              onChange={(e, d) => handleFormInputData(e, d)}\r\n            />\r\n          </Form.Field>\r\n          {props.errorMsg ? props.errorMsg : null}\r\n          <Button\r\n            type=\"submit\"\r\n            floated=\"right\"\r\n            color=\"green\"\r\n            style={styleAuth.fontsize}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user,\r\n    errorMsg: state.auth.errorMsg\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  userLoginRx: userLogin\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Confirm, Form } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProject } from \"./../../Actions/Index\";\r\nimport uid from \"uid\";\r\n\r\nconst styleAdminModalAddProject = {\r\n  button: { marginBottom: 10 },\r\n  form: {\r\n    padding: 30\r\n  }\r\n};\r\n\r\nconst AdminModalAddProject = props => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    id: uid(),\r\n    name: \"\",\r\n    link: \"\",\r\n    github: \"\",\r\n    date: \"\",\r\n    stack: \"\",\r\n    color: \"\",\r\n    info: \"\"\r\n  });\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const openButton = () => setOpen(true);\r\n  const closeButton = () => setOpen(false);\r\n\r\n  const [stackString, setStackString] = useState(\r\n    \"React, Semantic-UI React, Firebase, Firestore\"\r\n  );\r\n\r\n  const handleStack = e => {\r\n    setStackString(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormData(f => {\r\n      return {\r\n        ...f,\r\n        stack: stackString.split(\", \")\r\n      };\r\n    });\r\n  }, [stackString]);\r\n\r\n  const [colorString, setColorString] = useState(\"#33FFBD, #33FF57, #75FF33\");\r\n\r\n  const handleColor = e => {\r\n    setColorString(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormData(f => {\r\n      return {\r\n        ...f,\r\n        color: colorString.split(\", \")\r\n      };\r\n    });\r\n  }, [colorString]);\r\n\r\n  const submitButton = () => {\r\n    closeButton();\r\n    props.addProjectRx(formData);\r\n    setFormData({\r\n      id: uid(),\r\n      name: \"\",\r\n      link: \"\",\r\n      date: \"\",\r\n      stack: \"\",\r\n      color: \"\",\r\n      info: \"\"\r\n    });\r\n    // props.getProjectsRx();\r\n  };\r\n  const AddProject = (\r\n    <Form style={styleAdminModalAddProject.form}>\r\n      <Form.Field>\r\n        <label>Name</label>\r\n        <input\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          required\r\n          value={formData.name}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Web Link</label>\r\n        <input\r\n          placeholder=\"Link\"\r\n          name=\"link\"\r\n          required\r\n          value={formData.link}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Github</label>\r\n        <input\r\n          placeholder=\"Github\"\r\n          name=\"github\"\r\n          required\r\n          value={formData.github}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Date (YYYY-MM-DD)</label>\r\n        <input\r\n          placeholder=\"Date (2019-04-01)\"\r\n          name=\"date\"\r\n          required\r\n          value={formData.date}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Color</label>\r\n        <input\r\n          placeholder=\"Color (ex color, color, color)\"\r\n          name=\"color\"\r\n          required\r\n          value={colorString}\r\n          onChange={e => handleColor(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Stack</label>\r\n        <input\r\n          placeholder=\"stack (ex stack, stack, stack)\"\r\n          name=\"stack\"\r\n          required\r\n          value={stackString}\r\n          onChange={e => handleStack(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Info</label>\r\n        <input\r\n          placeholder=\"Info\"\r\n          name=\"info\"\r\n          required\r\n          value={formData.info}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button\r\n          onClick={openButton}\r\n          content=\"Add New Project\"\r\n          positive\r\n          floated=\"right\"\r\n          style={styleAdminModalAddProject.button}\r\n          icon=\"plus\"\r\n          size=\"large\"\r\n        />\r\n        <Confirm\r\n          open={open}\r\n          onCancel={closeButton}\r\n          onConfirm={submitButton}\r\n          content={AddProject}\r\n          confirmButton={\"Submit\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n  addProjectRx: addProject\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminModalAddProject);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Confirm, Form } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editProject } from \"../../Actions/Index\";\r\n\r\nconst styleAdminModalEditProject = {\r\n  button: { marginBottom: 10 },\r\n  form: {\r\n    padding: 30\r\n  }\r\n};\r\n\r\nconst AdminModalEditProject = props => {\r\n  const { projectItem } = props;\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    id: projectItem.id,\r\n    name: projectItem.name,\r\n    link: projectItem.link,\r\n    github: projectItem.github,\r\n    date: projectItem.date,\r\n    stack: projectItem.stack,\r\n    color: projectItem.color,\r\n    info: projectItem.info\r\n  });\r\n\r\n  const handleFormInputData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const openButton = () => setOpen(true);\r\n  const closeButton = () => setOpen(false);\r\n\r\n  const [stackString, setStackString] = useState(\r\n    \"React, Semantic-UI React, Firebase, Firestore\"\r\n  );\r\n\r\n  const handleStack = e => {\r\n    setStackString(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormData(f => {\r\n      return {\r\n        ...f,\r\n        stack: stackString.split(\", \")\r\n      };\r\n    });\r\n  }, [stackString]);\r\n\r\n  const [colorString, setColorString] = useState(\"#33FFBD, #33FF57, #75FF33\");\r\n\r\n  const handleColor = e => {\r\n    setColorString(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormData(f => {\r\n      return {\r\n        ...f,\r\n        color: colorString.split(\", \")\r\n      };\r\n    });\r\n  }, [colorString]);\r\n\r\n  const submitButton = () => {\r\n    closeButton();\r\n    props.editProjectRx(formData);\r\n  };\r\n  const AddProject = (\r\n    <Form style={styleAdminModalEditProject.form}>\r\n      <Form.Field>\r\n        <label>Name</label>\r\n        <input\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          required\r\n          value={formData.name}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Web Link</label>\r\n        <input\r\n          placeholder=\"Link\"\r\n          name=\"link\"\r\n          required\r\n          value={formData.link}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Github</label>\r\n        <input\r\n          placeholder=\"Github\"\r\n          name=\"github\"\r\n          required\r\n          value={formData.github}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Date</label>\r\n        <input\r\n          placeholder=\"Date (ex 2019-04)\"\r\n          name=\"date\"\r\n          required\r\n          value={formData.date}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Color</label>\r\n        <input\r\n          placeholder=\"Color (ex color, color, color)\"\r\n          name=\"color\"\r\n          required\r\n          value={colorString}\r\n          onChange={e => handleColor(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Stack</label>\r\n        <input\r\n          placeholder=\"stack (ex stack, stack, stack)\"\r\n          name=\"stack\"\r\n          required\r\n          value={stackString}\r\n          onChange={e => handleStack(e)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Info</label>\r\n        <input\r\n          placeholder=\"Info\"\r\n          name=\"info\"\r\n          required\r\n          value={formData.info}\r\n          onChange={e => handleFormInputData(e)}\r\n        />\r\n      </Form.Field>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={openButton}\r\n        content=\"Edit\"\r\n        basic\r\n        compact\r\n        floated=\"right\"\r\n        style={styleAdminModalEditProject.button}\r\n      />\r\n      <Confirm\r\n        open={open}\r\n        onCancel={closeButton}\r\n        onConfirm={submitButton}\r\n        content={AddProject}\r\n        confirmButton={\"Submit\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  editProjectRx: editProject\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminModalEditProject);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Item, Button, Confirm } from \"semantic-ui-react\";\r\nimport { DateTime } from \"luxon\";\r\nimport { deleteProject } from \"../../Actions/Index\";\r\nimport AdminModalAddProject from \"./AdminModalAddProject\";\r\nimport { Dimmer, Loader, Placeholder, Segment } from \"semantic-ui-react\";\r\nimport AdminModalEditProject from \"./AdminModalEditProject\";\r\nimport selectSortDate from \"../../Selectors/selectSortDate\";\r\n\r\nconst Admin = props => {\r\n  const { user, authLoadingCompleted, sortedProjectByDate } = props;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [deleteName, setDeleteName] = useState(null);\r\n\r\n  //****testing\r\n  console.log(\"authLoadingCompleted\", authLoadingCompleted);\r\n\r\n  // a modal will open when openDeleteButton is clicked.\r\n  // passed into the function will be the itemId, it will also\r\n  const openDeleteButton = (itemId, itemName) => {\r\n    setDeleteId(itemId);\r\n    setDeleteName(itemName);\r\n    setOpen(true);\r\n  };\r\n  const closeButton = () => setOpen(false);\r\n\r\n  const submitButton = () => {\r\n    closeButton();\r\n\r\n    props.deleteProjectRx(deleteId);\r\n  };\r\n\r\n  const StringDateFormat = dateData => {\r\n    return DateTime.fromISO(dateData).toLocaleString({\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      day: \"numeric\"\r\n    });\r\n  };\r\n  const projectMap = sortedProjectByDate.map(item => {\r\n    return (\r\n      <Table celled compact column={5} key={item.id}>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell colSpan=\"3\" verticalAlign=\"middle\">\r\n              {item.name}\r\n\r\n              <Button\r\n                onClick={() => openDeleteButton(item.id, item.name)}\r\n                basic\r\n                compact\r\n                floated=\"right\"\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              <AdminModalEditProject projectItem={item} />\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell width={2}>id</Table.Cell>\r\n            <Table.Cell>{item.id}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={2}>web</Table.Cell>\r\n            <Table.Cell>\r\n              <Item\r\n                as=\"a\"\r\n                href={item.link}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {item.link}\r\n              </Item>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>github</Table.Cell>\r\n            <Table.Cell>\r\n              <Item\r\n                as=\"a\"\r\n                href={item.github}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {item.github}\r\n              </Item>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>date</Table.Cell>\r\n            <Table.Cell>{StringDateFormat(item.date)}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>info</Table.Cell>\r\n            <Table.Cell>{item.info}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>stack</Table.Cell>\r\n            <Table.Cell>\r\n              {Array.isArray(item.stack) ? item.stack.join(\", \") : item.stack}\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>color</Table.Cell>\r\n            <Table.Cell>\r\n              {Array.isArray(item.color) ? item.color.join(\", \") : item.color}\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  });\r\n\r\n  // rendering a loading screen while auth is being conducted\r\n  // after completing authLoadingComplete, check if user is true or false\r\n  // false user will get a redirect to home page\r\n  const loaderComp = (\r\n    <Segment>\r\n      <Dimmer active inverted>\r\n        <Loader size=\"massive\" />\r\n      </Dimmer>\r\n      <Placeholder>\r\n        <Placeholder.Header image>\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n        </Placeholder.Header>\r\n        <Placeholder.Paragraph>\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"full\" />\r\n        </Placeholder.Paragraph>\r\n      </Placeholder>\r\n    </Segment>\r\n  );\r\n\r\n  let authLoadingLogic;\r\n  if (authLoadingCompleted) {\r\n    if (user) {\r\n      authLoadingLogic = (\r\n        <>\r\n          <Confirm\r\n            open={open}\r\n            header={`Delete Confirmation`}\r\n            onCancel={closeButton}\r\n            onConfirm={submitButton}\r\n            content={`${deleteName}`}\r\n            confirmButton=\"Delete\"\r\n          />\r\n          <AdminModalAddProject />\r\n          {projectMap}\r\n        </>\r\n      );\r\n    } else {\r\n      props.history.push(\"/\");\r\n    }\r\n  } else {\r\n    authLoadingLogic = loaderComp;\r\n  }\r\n\r\n  return <div>{authLoadingLogic}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const SortedDate = selectSortDate(state);\r\n  \r\n  return {\r\n    user: state.auth.user,\r\n    authLoadingCompleted: state.auth.authLoadingCompleted,\r\n    project: state.home,\r\n    sortedProjectByDate: SortedDate\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteProjectRx: deleteProject\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home/Home\";\nimport NavBar from \"./components/NavBar\";\n\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport { Container } from \"semantic-ui-react\";\nimport About from \"./components/About\";\nimport Login from \"./components/Login/Login\";\nimport Admin from \"./components/Admin/Admin\";\nimport { checkAuthState, getProjects } from \"./Actions/Index\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  const { getProjectsRx } = props;\n  console.log(\"app page call\");\n\n  props.checkAuthStateRx();\n  useEffect(() => {\n    console.log(\"app useEffect call\");\n    getProjectsRx();\n  }, [getProjectsRx]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <ScrollToTop>\n          <Switch>\n            <>\n              <Container>\n                <Route exact path=\"/\" render={props => <Home {...props} />} />\n                <Route\n                  exact\n                  path=\"/about\"\n                  render={props => <About {...props} />}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={props => <Login {...props} />}\n                />\n                <Route\n                  exact\n                  path=\"/admin\"\n                  render={props => <Admin {...props} />}\n                />\n              </Container>\n            </>\n          </Switch>\n        </ScrollToTop>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  checkAuthStateRx: checkAuthState,\n  getProjectsRx: getProjects\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import Data from \"../projectData.json\";\r\nimport { GET_PROJECTS } from \"./../Actions/Types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_PROJECTS:\r\n      console.log(\"getproject payload\", payload);\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AUTH_LOGOUT, AUTH_LOGIN, AUTH_ERROR_MSG } from \"./../Actions/Types\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  errorMsg: null,\r\n  authLoadingCompleted: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AUTH_LOGIN:\r\n      return {\r\n        ...state,\r\n        authLoadingCompleted: payload.authLoadingCompleted,\r\n        user: payload.user\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return { ...state, user: null };\r\n    case AUTH_ERROR_MSG:\r\n      return { ...state, errorMsg: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport homeReducer from \"./homeReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({ home: homeReducer, auth: authReducer });\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./Reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxThunk from \"redux-thunk\";\n\nReactDOM.render(\n  <Provider\n    store={createStore(\n      reducers,\n      composeWithDevTools(applyMiddleware(reduxThunk))\n    )}\n  >\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}